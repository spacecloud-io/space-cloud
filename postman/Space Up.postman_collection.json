{
  "info": {
    "_postman_id": "1c6f3672-fec0-4549-a1cd-a801ed246e92",
    "name": "Space Up",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Gateway",
      "item": [
        {
          "name": "Config",
          "item": [
            {
              "name": "Global Config",
              "item": [
                {
                  "name": "Lets Encrypt",
                  "item": [
                    {
                      "name": "Set Lets Encrypt config",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"letsencrypt-config\",\n    \"domains\": [\n        \"local.com\"\n    ]\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/letsencrypt/config/letsencrypt-config",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}",
                            "letsencrypt",
                            "config",
                            "letsencrypt-config"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Get Lets encrypt config",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/letsencrypt/config",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}",
                            "letsencrypt",
                            "config"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Integrations",
                  "item": [
                    {
                      "name": "Integrations",
                      "item": [
                        {
                          "name": "Get Integration",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/integrations?id=*",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "integrations"
                              ],
                              "query": [
                                {
                                  "key": "id",
                                  "value": "*"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Create Integration",
                          "request": {
                            "method": "POST",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"id\": \"\",\n    \"name\": \"\",\n    \"key\": \"\",\n    \"license\": \"\",\n    \"version\": \"\",\n    \"configPermissions\": [],\n    \"apiPermissions\": [],\n    \"deployments\": [],\n    \"secretSource\": \"\",\n    \"appUrl\": \"\",\n    \"compatibleVersion\": \"\",\n    \"compatibleVersionNo\": 1,\n    \"details\": \"\",\n    \"description\": \"\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/integrations",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "integrations"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Delete Integration",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/integrations/{{integration_id}}",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "integrations",
                                "{{integration_id}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Get Interation Token",
                          "request": {
                            "method": "POST",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"id\":\"\",\n    \"key\":\"\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/integrations/tokens",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "integrations",
                                "tokens"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "Integration Hooks",
                      "item": [
                        {
                          "name": "Add Integration Hooks",
                          "request": {
                            "method": "POST",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"id\": \"\",\n    \"integrationId\": \"\",\n    \"kind\": \"\",\n    \"resources\": [],\n    \"verbs\": [],\n    \"url\": \"\",\n    \"attributes\": {},\n    \"rule\": {\n        \"rule\":\"allow\"\n    }\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/integrations/{{integration_id}}/hooks",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "integrations",
                                "{{integration_id}}",
                                "hooks"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Delete Integration Hooks",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/integrations/{{integration_id}}/hooks/{{integration_hook_id}}",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "integrations",
                                "{{integration_id}}",
                                "hooks",
                                "{{integration_hook_id}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Get Integration Hooks",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/integrations/{{integration_id}}/hooks?id=*",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "integrations",
                                "{{integration_id}}",
                                "hooks"
                              ],
                              "query": [
                                {
                                  "key": "id",
                                  "value": "*",
                                  "description": "Integratin hook id"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                },
                {
                  "name": "License",
                  "item": [
                    {
                      "name": "Upgrade Cluster",
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"licenseKey\": \"Facehorn\",\n    \"licenseValue\": \"1jXTUsVVLkNOO7zjhQvAmTPWoMX1jXTUwOt3mVuuIviVIJ6pHdy8IJ\",\n    \"clusterName\":\"first-cluster\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/upgrade",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "upgrade"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Renew License",
                      "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/renew-license",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "renew-license"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Downgrade Cluster",
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/license-manager/degrade",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "license-manager",
                            "degrade"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Set Offline License",
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"license\":\"\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/offline-license",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "offline-license"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Cluster Config",
                  "item": [
                    {
                      "name": "Get Cluster Config",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/global-config",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "global-config"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Set Cluster Config",
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"letsencryptEmail\":\"sharadregoti15@gmail.com\",\n    \"enableTelemetry\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/global-config",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "global-config"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Cache Config",
                  "item": [
                    {
                      "name": "Set Cache Config",
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"enabled\":true,\n    \"conn\": \"localhost:6379\",\n    \"defaultTTL\": 600\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "http://localhost:{{Gateway_Port}}/v1/config/caching/config/caching-config",
                          "protocol": "http",
                          "host": [
                            "localhost"
                          ],
                          "port": "{{Gateway_Port}}",
                          "path": [
                            "v1",
                            "config",
                            "caching",
                            "config",
                            "caching-config"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Get Cache Config",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "http://localhost:{{Gateway_Port}}/v1/config/caching/config",
                          "protocol": "http",
                          "host": [
                            "localhost"
                          ],
                          "port": "{{Gateway_Port}}",
                          "path": [
                            "v1",
                            "config",
                            "caching",
                            "config"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Get Connection State",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "http://localhost:{{Gateway_Port}}/v1/external/caching/connection-state",
                          "protocol": "http",
                          "host": [
                            "localhost"
                          ],
                          "port": "{{Gateway_Port}}",
                          "path": [
                            "v1",
                            "external",
                            "caching",
                            "connection-state"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Purge Cache",
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"resource\":\"db-schema\",\n    \"dbAlias\": \"*\",\n    \"serviceId\": \"\",\n    \"id\":\"users\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "http://localhost:{{Gateway_Port}}/v1/external/projects/{{ProjectId}}/caching/purge-cache",
                          "protocol": "http",
                          "host": [
                            "localhost"
                          ],
                          "port": "{{Gateway_Port}}",
                          "path": [
                            "v1",
                            "external",
                            "projects",
                            "{{ProjectId}}",
                            "caching",
                            "purge-cache"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Project Config",
              "item": [
                {
                  "name": "Database Module",
                  "item": [
                    {
                      "name": "Config",
                      "item": [
                        {
                          "name": "Set database config",
                          "request": {
                            "method": "POST",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"dbAlias\": \"{{db_alias}}\",\n    \"type\": \"postgres\",\n    \"name\": \"test\",\n    \"conn\": \"postgres://postgres:mysecretpassword@localhost:5432/postgres?sslmode=disable\",\n    \"isPrimary\": true,\n    \"enabled\": true,\n    \"batchTime\": 10,\n    \"batchRecords\": 10,\n    \"limit\": 100,\n    \"driverConf\": {\n        \"maxConn\": 100,\n        \"maxIdleTimeout\": 100,\n        \"minConn\": 100,\n        \"maxIdleConn\": 100\n    }\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/database/{{db_alias}}/config/{{db_alias}}-config",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "database",
                                "{{db_alias}}",
                                "config",
                                "{{db_alias}}-config"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Get Database Config",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/database/config?dbAlias=*",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "database",
                                "config"
                              ],
                              "query": [
                                {
                                  "key": "dbAlias",
                                  "value": "*"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Delete Database Config",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/database/{{db_alias}}/config/{{db_alias}}-config",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "database",
                                "{{db_alias}}",
                                "config",
                                "{{db_alias}}-config"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "Schema",
                      "item": [
                        {
                          "name": "Create Single Table",
                          "request": {
                            "method": "POST",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"table\": \"{{table_name}}\",\n    \"dbAlias\": \"{{db_alias}}\",\n    \"schema\": \"type table1 { id: Integer! name : String! timepass : ID }\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/database/{{db_alias}}/collections/{{table_name}}/schema/mutate",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "database",
                                "{{db_alias}}",
                                "collections",
                                "{{table_name}}",
                                "schema",
                                "mutate"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Get All Tables",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/database/collections/schema/mutate?dbAlias=*&col=*&format=graphql",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "database",
                                "collections",
                                "schema",
                                "mutate"
                              ],
                              "query": [
                                {
                                  "key": "dbAlias",
                                  "value": "*"
                                },
                                {
                                  "key": "col",
                                  "value": "*"
                                },
                                {
                                  "key": "format",
                                  "value": "graphql",
                                  "description": "Format can be either graphql or json"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "Schema Operations",
                      "item": [
                        {
                          "name": "Schema Inspect",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "http://localhost:{{port}}/v1/config/projects/{{project}}/database/{{dbAlias}}/collections/{{collection}}/schema/inspect",
                              "protocol": "http",
                              "host": [
                                "localhost"
                              ],
                              "port": "{{port}}",
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project}}",
                                "database",
                                "{{dbAlias}}",
                                "collections",
                                "{{collection}}",
                                "schema",
                                "inspect"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "List Collections",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "http://localhost:{{port}}/v1/external/projects/{{project}}/database/{{dbAlias}}/list-collections",
                              "protocol": "http",
                              "host": [
                                "localhost"
                              ],
                              "port": "{{port}}",
                              "path": [
                                "v1",
                                "external",
                                "projects",
                                "{{project}}",
                                "database",
                                "{{dbAlias}}",
                                "list-collections"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "Prepared Queries",
                      "item": [
                        {
                          "name": "Set Prepared Queries",
                          "request": {
                            "method": "POST",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"id\": \"fetch-info\",\n    \"sql\": \"UPDATE * FROM testproject.fruits  WHERE (city = $1)\",\n    \"rule\": {\n        \"rule\": \"allow\"\n    },\n    \"dbAlias\": \"{{db_alias}}\",\n    \"args\": [\n        \"args.city\"\n    ]\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/database/{{db_alias}}/prepared-queries/fetch-info",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "database",
                                "{{db_alias}}",
                                "prepared-queries",
                                "fetch-info"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Read Prepared Queries",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/database/prepared-queries?dbAlias=*&id=*",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "database",
                                "prepared-queries"
                              ],
                              "query": [
                                {
                                  "key": "dbAlias",
                                  "value": "*"
                                },
                                {
                                  "key": "id",
                                  "value": "*"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Delete Prepaired Query",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/database/{{db_alias}}/prepared-queries/fetch-info",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "database",
                                "{{db_alias}}",
                                "prepared-queries",
                                "fetch-info"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "Rules",
                      "item": [
                        {
                          "name": "Set Database Collection Rules",
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "eyJhbGciOiJIUzI1NiIsImtpZCI6InNjLWFkbWluLWtpZCIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDc0MzcyODYsImlkIjoiYWRtaW4iLCJyb2xlIjoiYWRtaW4ifQ.s0VpwoHQOFYushhmkW2X5DYi_2QBiMM9M279YOvKY1M",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"col\": \"{{table_name}}\",\n    \"dbAlias\": \"{{db_alias}}\",\n    \"rules\": {\n        \"create\": {\n            \"rule\": \"allow\"\n        },\n        \"read\": {\n            \"rule\": \"webhook\"\n        },\n        \"update\": {\n            \"rule\": \"allow\"\n        },\n        \"delete\": {\n            \"rule\": \"allow\"\n        }\n    },\n    \"isRealtimeEnabled\": false\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/database/{{db_alias}}/collections/{{table_name}}/rules",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "database",
                                "{{db_alias}}",
                                "collections",
                                "{{table_name}}",
                                "rules"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Get Database Collection Rule",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/database/collections/rules?col=*&dbAlias=*",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "database",
                                "collections",
                                "rules"
                              ],
                              "query": [
                                {
                                  "key": "col",
                                  "value": "*"
                                },
                                {
                                  "key": "dbAlias",
                                  "value": "*"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Delete Database Collection Rule",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/database/{{db_alias}}/collections/{{table_name}}/rules",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "database",
                                "{{db_alias}}",
                                "collections",
                                "{{table_name}}",
                                "rules"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "Others",
                      "item": [],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Remote Services",
                  "item": [
                    {
                      "name": "Get Remote Service",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/remote-service/service?serviceId={{remote_service_id}}",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}",
                            "remote-service",
                            "service"
                          ],
                          "query": [
                            {
                              "key": "serviceId",
                              "value": "{{remote_service_id}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Set Remote Service",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"id\": \"{{remote_service_id}}\",\n\t\"url\":\"http://localhost\",\n\t\"endpoints\": {\n\t\t\"getInvoices\": {\n            \"kind\":\"\",\n            \"template\":\"\",\n            \"requestTemplate\":\"\",\n            \"graphTemplate\":\"\",\n            \"responseTemplate\":\"\",\n            \"outputFormat\":\"\",\n            \"token\":\"\",\n            \"claims\":\"\",            \n\t\t\t\"method\":\"post\",\n\t\t\t\"path\":\"/v1/config\",\n            \"rule\": {\n                \"rule\":\"allow\"\n            },\n            \"headers\": [\n                {\n                    \"key\":\"\",\n                    \"value\":\"\",\n                    \"op\":\"\"\n                }\n            ],\n            \"timeout\": 100\n\t\t}\n\t}\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/remote-service/service/{{remote_service_id}}",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}",
                            "remote-service",
                            "service",
                            "{{remote_service_id}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Delete Remote Service",
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/remote-service/service/{{remote_service_id}}",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}",
                            "remote-service",
                            "service",
                            "{{remote_service_id}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                },
                {
                  "name": "User Mangement",
                  "item": [
                    {
                      "name": "Get User Mangement",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/user-management/provider?id={{user_management_provider_id}}",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}",
                            "user-management",
                            "provider"
                          ],
                          "query": [
                            {
                              "key": "id",
                              "value": "{{user_management_provider_id}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Set User Mangement",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"id\": \"{{user_management_provider_id}}\",\n\t\"enabled\":true,\n\t\"secret\":\"secret\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/user-management/provider/{{user_management_provider_id}}",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}",
                            "user-management",
                            "provider",
                            "{{user_management_provider_id}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Set User Mangement",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/user-management/provider/{{user_management_provider_id}}",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}",
                            "user-management",
                            "provider",
                            "{{user_management_provider_id}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Eventing Module",
                  "item": [
                    {
                      "name": "Security Rule",
                      "item": [
                        {
                          "name": "Get Eventing Security Rule",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/eventing/rules?id=*",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "eventing",
                                "rules"
                              ],
                              "query": [
                                {
                                  "key": "id",
                                  "value": "*"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Set Eventing Security Rule",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"rule\": \"allow\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/eventing/rules/rule-name",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "eventing",
                                "rules",
                                "rule-name"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Delete Eventing Security Rule",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/eventing/rules/rule-name",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "eventing",
                                "rules",
                                "rule-name"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "Trigger Rule",
                      "item": [
                        {
                          "name": "Get Eventing Trigger Rules",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/eventing/triggers?id=*",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "eventing",
                                "triggers"
                              ],
                              "query": [
                                {
                                  "key": "id",
                                  "value": "*"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Set Eventing Trigger Rules",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"id\":\"{{triggerName}}\",\n    \"type\": \"type\",\n    \"retires\": \"retries\",\n    \"timeout\": \"timeout\",\n    \"url\": \"url\",\n    \"naem\": \"name\",\n    \"options\": {\n        \"1\": \"1\"\n    }\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/eventing/triggers/trigger-name",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "eventing",
                                "triggers",
                                "trigger-name"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Delete Eventing Trigger Rules",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/eventing/triggers/trigger-name",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "eventing",
                                "triggers",
                                "trigger-name"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "Schemas",
                      "item": [
                        {
                          "name": "Get Eventing Schema",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/eventing/schema?id=*",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "eventing",
                                "schema"
                              ],
                              "query": [
                                {
                                  "key": "id",
                                  "value": "*"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Set Eventing Schema",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"schema\":\"type type2 {}\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/eventing/schema/schema-name",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "eventing",
                                "schema",
                                "schema-name"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Delete Eventing",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/eventing/schema/schema-name",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "eventing",
                                "schema",
                                "schema-name"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "Config",
                      "item": [
                        {
                          "name": "Set Eventing Config",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"enabled\":true,\n\t\"dbAlias\":\"{{db_alias}}\"\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/eventing/config/eventing-config",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "eventing",
                                "config",
                                "eventing-config"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Get Eventing Config",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/eventing/config",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "eventing",
                                "config"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                },
                {
                  "name": "File Storage",
                  "item": [
                    {
                      "name": "Config",
                      "item": [
                        {
                          "name": "Set File Store Config",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"enabled\": true,\n    \"storeType\": \"gcp-storage\",\n    \"conn\": \"\",\n    \"endpoint\": \"\",\n    \"bucket\": \"test-file-secrets\",\n    \"secret\": \"secrets.gcp.gcp\",\n    \"disableSSL\": false,\n    \"forcePathStyle\": false\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/file-storage/config/filestore-config",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "file-storage",
                                "config",
                                "filestore-config"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Get File Store Config",
                          "request": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/file-storage/config",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "file-storage",
                                "config"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "Rules",
                      "item": [
                        {
                          "name": "Set File Store Rule",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "name": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"id\":\"default\",\n\t\"prefix\": \"/\",\n\t\"rule\": {\n\t\t\"create\": {\n\t\t\t\"rule\": \"allow\",\n\t\t\t\"eval\": \"eval\",\n\t\t\t\"type\": \"type\"\n\t\t},\n\t\t\"delete\": {\n\t\t\t\"rule\": \"allow\",\n\t\t\t\"eval\": \"eval\",\n\t\t\t\"type\": \"type\"\n\t\t},\n\t\t\"read\": {\n\t\t\t\"rule\": \"allow\",\n\t\t\t\"eval\": \"eval\",\n\t\t\t\"type\": \"type\"\n\t\t}\n\t}\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/file-storage/rules/default",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "file-storage",
                                "rules",
                                "default"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Delete File Rule",
                          "request": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/file-storage/rules/default",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "file-storage",
                                "rules",
                                "default"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Get File Store Rule",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/file-storage/rules?id=*",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{{project_id}}",
                                "file-storage",
                                "rules"
                              ],
                              "query": [
                                {
                                  "key": "id",
                                  "value": "*"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Routing Module",
                  "item": [
                    {
                      "name": "Global Routes",
                      "item": [
                        {
                          "name": "Get Global Route",
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{project}/routing/ingress/global",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{project}",
                                "routing",
                                "ingress",
                                "global"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "Set Global Route",
                          "protocolProfileBehavior": {
                            "disableBodyPruning": true
                          },
                          "request": {
                            "method": "GET",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"headers\": [],\n    \"resHeaders\": []\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{gateway_base_url}}/v1/config/projects/{project}/routing/ingress/global",
                              "host": [
                                "{{gateway_base_url}}"
                              ],
                              "path": [
                                "v1",
                                "config",
                                "projects",
                                "{project}",
                                "routing",
                                "ingress",
                                "global"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "protocolProfileBehavior": {},
                      "_postman_isSubFolder": true
                    },
                    {
                      "name": "Get Routes",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project}}/routing/ingress?id=*",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project}}",
                            "routing",
                            "ingress"
                          ],
                          "query": [
                            {
                              "key": "id",
                              "value": "*"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Delete Route",
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/routing/ingress/route-id",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}",
                            "routing",
                            "ingress",
                            "route-id"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Set Route",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"routes\": [\n        {\n            \"protocol\":\"tcp\",\n            \"source\": {\n                \"port\": 8080\n            },\n            \"targets\": [\n                {\n                    \"port\": 8080,\n                    \"weight\": 50,\n                    \"version\": \"v1\",\n                    \"type\": \"version\"\n                },\n                {\n                    \"port\": 8080,\n                    \"weight\": 50,\n                    \"version\": \"v2\",\n                    \"type\": \"version\"\n                }\n            ]\n        }\n    ]\n}/v1\",\n        \"type\": \"prefix\"\n    },\n    \"targets\": [\n        {\n            \"scheme\": \"http\",\n            \"host\": \"host\",\n            \"port\": 8090,\n            \"weight\": 100\n        }\n    ],\n    \"rule\": {\n        \"rule\": \"allow\"\n    },\n    \"modify\": {\n        \"template\": \"\",\n        \"requestTemplate\": \"\",\n        \"responseTemplate\": \"\",\n        \"outputFormat\": \"\",\n        \"headers\": [],\n        \"resHeaders\": []\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}/routing/ingress/{{deployed_service_id}}",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}",
                            "routing",
                            "ingress",
                            "route-id"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Projects",
                  "item": [
                    {
                      "name": "Set Project",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"testproject\",\n    \"name\": \"testproject\",\n    \"secret\": [],\n    \"secretSource\": \"\",\n    \"isIntegration\": \"\",\n    \"aesKey\": \"c2hhcmFkIGlzIG15IG5hbWU=\",\n    \"dockerRegistry\": \"\",\n    \"contextTime\": 5\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Delete Project",
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Get Project",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{gateway_base_url}}/v1/config/projects/{{project_id}}",
                          "host": [
                            "{{gateway_base_url}}"
                          ],
                          "path": [
                            "v1",
                            "config",
                            "projects",
                            "{{project_id}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Miscellaneous",
              "item": [
                {
                  "name": "Login",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"token\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/config/login",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "config",
                        "login"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Load Env",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/config/env",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "config",
                        "env"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Batch Apply",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"specs\":[]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/config/batch-apply",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "config",
                        "batch-apply"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "eyJhbGciOiJIUzI1NiIsImtpZCI6InNjLWFkbWluLWtpZCIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDg2MjIzNjQsImlkIjoiYWRtaW4iLCJyb2xlIjoiYWRtaW4ifQ.IdPVyacG1pPR7UQd4EjnH7s2Mzif5rQCDjH8NjF40RU",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "59c38ae1-0997-45a0-98e9-f25d2fc4af9b",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "8ffd3a61-e3d1-4fc2-8ce2-26e33e0af0c8",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "API",
          "item": [
            {
              "name": "Prepared Query",
              "item": [
                {
                  "name": "Execute Prepared Query",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"params\": {\n        \"args\": {\n            \"city\": \"mumbai\"\n        }\n    }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "http://{{gateway_addr}}/v1/api/{{project}}/crud/{{db_alias}}/prepared-queries/fruit-read",
                      "protocol": "http",
                      "host": [
                        "{{gateway_addr}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project}}",
                        "crud",
                        "{{db_alias}}",
                        "prepared-queries",
                        "fruit-read"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Eventing",
              "item": [
                {
                  "name": "Queue Event",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"type\": \"\",\n    \"delay\": 5,\n    \"timestamp\": \"\",\n    \"payload\": {},\n    \"options\": {},\n    \"isSynchronous\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/eventing/queue",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "eventing",
                        "queue"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Admin Queue Event",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"type\": \"\",\n    \"delay\": 5,\n    \"timestamp\": \"\",\n    \"payload\": {},\n    \"options\": {},\n    \"isSynchronous\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/eventing/admin-queue",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "eventing",
                        "admin-queue"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Health Check",
              "item": [
                {
                  "name": "Health Check",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{runner_base_url}}/v1/api/health-check",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "health-check"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "File Storage",
              "item": [
                {
                  "name": "Create",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "path",
                          "value": "/root",
                          "type": "text"
                        },
                        {
                          "key": "fileType",
                          "value": "file",
                          "description": "file or dir",
                          "type": "text"
                        },
                        {
                          "key": "makeAll",
                          "value": "true",
                          "description": "Value can be true or false\nIf this is true, complete path will be created if it does not exists",
                          "type": "text"
                        },
                        {
                          "key": "meta",
                          "value": "",
                          "description": "Meta information to add to the file",
                          "type": "text"
                        },
                        {
                          "key": "file",
                          "value": "",
                          "description": "If fileType is file Put file contetn here",
                          "type": "text"
                        },
                        {
                          "key": "name",
                          "value": "",
                          "description": "If fileType is dir Put directory name here",
                          "type": "text"
                        }
                      ],
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{runner_base_url}}/v1/api/{{project_id}}/files",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "files"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Read",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{runner_base_url}}/v1/api/{{project_id}}/files/put-your-file-path-here?op=list",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "files",
                        "put-your-file-path-here"
                      ],
                      "query": [
                        {
                          "key": "op",
                          "value": "list",
                          "description": "It can be either list or exists\nIf list all the files specified in the directory will be listed\nelse it will check if the provided path exists\n"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete",
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{runner_base_url}}/v1/api/{{project_id}}/files/put-your-file-path-here?fileType=file",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "files",
                        "put-your-file-path-here"
                      ],
                      "query": [
                        {
                          "key": "fileType",
                          "value": "file",
                          "description": "It can be either file or dir"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "GraphQL",
              "item": [
                {
                  "name": "Send Graphql Query",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "graphql",
                      "graphql": {
                        "query": "",
                        "variables": ""
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/graphql",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "graphql"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Database",
              "item": [
                {
                  "name": "Create",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"doc\": {},\n    \"isBatch\": false,\n    \"op\": \"one\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/crud/{{db_alias}}/{{table_name}}/create",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "crud",
                        "{{db_alias}}",
                        "{{table_name}}",
                        "create"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Read",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"group\":[],\n    \"aggregate\":{},\n    \"find\":{},\n    \"op\":\"one\",\n    \"options\":{},\n    \"isBatch\": false,\n    \"extras\": {}\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/crud/{{db_alias}}/{{table_name}}/read",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "crud",
                        "{{db_alias}}",
                        "{{table_name}}",
                        "read"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"find\":{},\n    \"op\":\"\",\n    \"update\":{}\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/crud/{{db_alias}}/{{table_name}}/update",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "crud",
                        "{{db_alias}}",
                        "{{table_name}}",
                        "update"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"find\":{},\n    \"op\":\"one\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/crud/{{db_alias}}/{{table_name}}/delete",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "crud",
                        "{{db_alias}}",
                        "{{table_name}}",
                        "delete"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Aggregate",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"pipe\": {},\n    \"op\": \"all\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/crud/{{db_alias}}/{{table_name}}/aggr",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "crud",
                        "{{db_alias}}",
                        "{{table_name}}",
                        "aggr"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Batch",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"reqs\": [\n        {\n            \"col\": \"\",\n            \"doc\": {},\n            \"op\": \"\",\n            \"find\": {},\n            \"update\": {},\n            \"type\": \"\",\n            \"dBAlias\": \"\",\n            \"extras\": {}\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/crud/{{db_alias}}/batch",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "crud",
                        "{{db_alias}}",
                        "batch"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Execute Prepared Query",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"params\":{},\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/crud/{{db_alias}}/prepared-queries/{{prepared_query_id}}",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "crud",
                        "{{db_alias}}",
                        "prepared-queries",
                        "{{prepared_query_id}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "User Management",
              "item": [
                {
                  "name": "Email Sign In",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/auth/{{db_alias}}/email/signin",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "auth",
                        "{{db_alias}}",
                        "email",
                        "signin"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Email Sign Up",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"\",\n    \"email\": \"\",\n    \"pass\": \"\",\n    \"role\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/auth/{{db_alias}}/email/signin",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "auth",
                        "{{db_alias}}",
                        "email",
                        "signin"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Profile",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/auth/{{db_alias}}/profile/profile-id",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "auth",
                        "{{db_alias}}",
                        "profile",
                        "profile-id"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Profiles",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/auth/{{db_alias}}/profiles",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "auth",
                        "{{db_alias}}",
                        "profiles"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update Profile",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/auth/{{db_alias}}/edit_profile/profile-id",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "auth",
                        "{{db_alias}}",
                        "edit_profile",
                        "profile-id"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Realtime",
              "item": [
                {
                  "name": "Real Time Event",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"specversion\": \"\",\n    \"type\": \"\",\n    \"source\": \"\",\n    \"id\": \"\",\n    \"time\": \"\",\n    \"data\": {}\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/realtime/handle",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "realtime",
                        "handle"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Remote Services",
              "item": [
                {
                  "name": "Invoke Remote Service",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"params\":{},\n    \"timeout\": 100\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{gateway_base_url}}/v1/api/{{project_id}}/services/{{remote_service_id}}/{{remote_service_endpoint_name}}",
                      "host": [
                        "{{gateway_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "api",
                        "{{project_id}}",
                        "services",
                        "{{remote_service_id}}",
                        "{{remote_service_endpoint_name}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "eyJhbGciOiJIUzI1NiIsImtpZCI6InNjLWFkbWluLWtpZCIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDg2MjIzNjQsImlkIjoiYWRtaW4iLCJyb2xlIjoiYWRtaW4ifQ.IdPVyacG1pPR7UQd4EjnH7s2Mzif5rQCDjH8NjF40RU",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "af767753-00ca-4806-8ca5-1140b0dab996",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "7fb4e820-50c4-4b6f-bb6c-2f92a92dc887",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "External",
          "item": [
            {
              "name": "Get Cache Connection State",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{gateway_base_url}}/v1/external/projects/{{project_id}}/database/{{db_alias}}/connection-state",
                  "host": [
                    "{{gateway_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "external",
                    "projects",
                    "{{project_id}}",
                    "database",
                    "{{db_alias}}",
                    "connection-state"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get File Storage Connection State",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": ""
                }
              },
              "response": []
            },
            {
              "name": "Get Database Connection State",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": ""
                }
              },
              "response": []
            },
            {
              "name": "List all tables in a database (tracked and untracked both)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "/v1/external/projects/{{project_id}}/database/{{db_alias}}/list-collections",
                  "path": [
                    "v1",
                    "external",
                    "projects",
                    "{{project_id}}",
                    "database",
                    "{{db_alias}}",
                    "list-collections"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Inspect tracked tables",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{gateway_base_url}}/v1/external/projects/{{project_id}}/database/{{db_alias}}/schema/inspect",
                  "host": [
                    "{{gateway_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "external",
                    "projects",
                    "{{project_id}}",
                    "database",
                    "{{db_alias}}",
                    "schema",
                    "inspect"
                  ]
                },
                "description": "If the tables are internally mutated, call this endpoint to reflect the changes in space cloud"
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Runner",
      "item": [
        {
          "name": "Secrets",
          "item": [
            {
              "name": "Delete Secret",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/secrets/{{deployed_secret_id}}",
                  "host": [
                    "{{runner_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "runner",
                    "{{project_id}}",
                    "secrets",
                    "{{deployed_secret_id}}"
                  ]
                },
                "description": "Apis for secrets contained in runner"
              },
              "response": []
            },
            {
              "name": "Get Secrets",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/secrets?id={{deployed_secret_id}}",
                  "host": [
                    "{{runner_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "runner",
                    "{{project_id}}",
                    "secrets"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "{{deployed_secret_id}}",
                      "description": "Replace this with * to get all secrets"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Set Secret",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"{{deployed_secret_id}}\",\n    \"type\":\"docker\",\n    \"rootPath\":\"/\",\n    \"data\": {\n        \"key\":\"value\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/secrets/{{deployed_secret_id}}",
                  "host": [
                    "{{runner_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "runner",
                    "{{project_id}}",
                    "secrets",
                    "{{deployed_secret_id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Set Secret Root Path",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rootPath\":\"/\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/secrets/{{deployed_secret_id}}/root-path",
                  "host": [
                    "{{runner_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "runner",
                    "{{project_id}}",
                    "secrets",
                    "{{deployed_secret_id}}",
                    "root-path"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Set Secret Key",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"value\":\"value\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/secrets/{{deployed_secret_id}}/keyName",
                  "host": [
                    "{{runner_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "runner",
                    "{{project_id}}",
                    "secrets",
                    "{{deployed_secret_id}}",
                    "keyName"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete Secret Key",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/secrets/{{deployed_secret_id}}/keyName",
                  "host": [
                    "{{runner_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "runner",
                    "{{project_id}}",
                    "secrets",
                    "{{deployed_secret_id}}",
                    "keyName"
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Services",
          "item": [
            {
              "name": "Service",
              "item": [
                {
                  "name": "Apply Service",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"space-cloud-2\",\n    \"name\": \"Space Cloud\",\n    \"projectId\": \"project\",\n    \"version\": \"v1\",\n    \"scale\": {\n        \"replicas\": 0,\n        \"minReplicas\": 1,\n        \"maxReplicas\": 10,\n        \"concurrency\": 10\n    },\n    \"autoScale\": {\n        \"pollingInterval\": 15,\n        \"coolDownInterval\": 120,\n        \"minReplicas\": 1,\n        \"maxReplicas\": 10,\n        \"triggers\": []\n    },\n    \"whitelists\": [\n        {\n            \"projectId\": \"project\",\n            \"service\": \"*\"\n        }\n    ],\n    \"upstreams\": [\n        {\n            \"projectId\": \"project\",\n            \"service\": \"*\"\n        }\n    ],\n    \"tasks\": [\n        {\n            \"secrets\": [\n                \"env1\",\n                \"file1\"\n            ],\n            \"id\": \"space-cloud\",\n            \"ports\": [\n                {\n                    \"name\": \"http\",\n                    \"protocol\": \"http\",\n                    \"port\": 80\n                }\n            ],\n            \"resources\": {\n                \"cpu\": 250,\n                \"memory\": 250\n            },\n            \"env\": {\n                \"dev\": \"true\"\n            },\n            \"docker\": {\n                \"image\": \"sharadregoti/gateway\",\n                \"secret\": \"docker1\"\n            },\n            \"runtime\": \"image\"\n        }\n    ],\n    \"StatsInclusionPrefixes\": \"\"\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/services/{{deployed_service_id}}/{{deployed_service_version}}",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "runner",
                        "{{project_id}}",
                        "services",
                        "{{deployed_service_id}}",
                        "{{deployed_service_version}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete Service",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"space-cloud-2\",\n    \"name\": \"Space Cloud\",\n    \"projectId\": \"test-directory\",\n    \"version\": \"v1\",\n    \"scale\": {\n        \"replicas\": 0,\n        \"minReplicas\": 1,\n        \"maxReplicas\": 10,\n        \"concurrency\": 10\n    },\n    \"whitelists\": [\n        {\n            \"projectId\": \"test-directory\",\n            \"service\": \"*\"\n        }\n    ],\n    \"upstreams\": [\n        {\n            \"projectId\": \"test-directory\",\n            \"service\": \"*\"\n        }\n    ],\n    \"tasks\": [\n        {\n            \"secrets\": [\n                \"env1\",\n                \"env2\",\n                \"file1\",\n                \"file2\"\n            ],\n            \"id\": \"space-cloud\",\n            \"ports\": [\n                {\t\t\t\n                    \"name\": \"http\",\n                    \"protocol\": \"http\",\n                    \"port\": 80\n                }\n            ],\n            \"resources\": {\n                \"cpu\": 250,\n                \"memory\": 256\n            },\n            \"env\": {\n                \"dev\": \"true\"\n            },\n            \"docker\": {\n                \"image\": \"sharadregoti/gateway\",\n                \"secret\": \"docker1\"\n            },\n            \"runtime\": \"image\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": {
                      "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/services/{{deployed_service_id}}/{{deployed_service_version}}",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "runner",
                        "{{project_id}}",
                        "services",
                        "{{deployed_service_id}}",
                        "{{deployed_service_version}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Service",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/services?serviceId={{deployed_service_id}}&version={{deployed_service_version}}",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "runner",
                        "{{project_id}}",
                        "services"
                      ],
                      "query": [
                        {
                          "key": "serviceId",
                          "value": "{{deployed_service_id}}",
                          "description": "Replace the value with * to get all services"
                        },
                        {
                          "key": "version",
                          "value": "{{deployed_service_version}}",
                          "description": "Replace the value with * to get all version of a service"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Deployment Status",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/services/status?serviceId={{deployed_service_id}}&version={{deployed_service_version}}",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "runner",
                        "{{project_id}}",
                        "services",
                        "status"
                      ],
                      "query": [
                        {
                          "key": "serviceId",
                          "value": "{{deployed_service_id}}"
                        },
                        {
                          "key": "version",
                          "value": "{{deployed_service_version}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Roles",
              "item": [
                {
                  "name": "Set Service Roles",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\":\"{{deployed_service_role_id}}\",\n    \"project\": \"{{project_id}}\",\n    \"service\": \"{{deployed_service_id}}\",\n    \"type\":\"Project\",\n    \"rules\": [\n        {\n            \"apiGroups\": [\"\"],\n            \"resources\": [\"secrets\"],\n            \"verbs\": [\"list\",\"get\"]\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/service-roles/{{deployed_service_id}}/{{deployed_service_role_id}}",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "runner",
                        "{{project_id}}",
                        "service-roles",
                        "{{deployed_service_id}}",
                        "{{deployed_service_role_id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Service Roles",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/service-roles?serviceId=*&roleId=*",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "runner",
                        "{{project_id}}",
                        "service-roles"
                      ],
                      "query": [
                        {
                          "key": "serviceId",
                          "value": "*"
                        },
                        {
                          "key": "roleId",
                          "value": "*"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete Service Roles",
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/service-roles/{{deployed_service_id}}/{{deployed_service_role_id}}",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "runner",
                        "{{project_id}}",
                        "service-roles",
                        "{{deployed_service_id}}",
                        "{{deployed_service_role_id}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Routes",
              "item": [
                {
                  "name": "Set Route",
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/service-routes/{{deployed_service_id}}",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "runner",
                        "{{project_id}}",
                        "service-routes",
                        "{{deployed_service_id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Route",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/service-routes?id={{deployed_service_id}}",
                      "host": [
                        "{{runner_base_url}}"
                      ],
                      "path": [
                        "v1",
                        "runner",
                        "{{project_id}}",
                        "service-routes"
                      ],
                      "query": [
                        {
                          "key": "id",
                          "value": "{{deployed_service_id}}",
                          "description": "Replace this with * to get all services"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Projects",
          "item": [
            {
              "name": "Set Project",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{runner_base_url}}/v1/runner/project/{{project_id}}",
                  "host": [
                    "{{runner_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "runner",
                    "project",
                    "{{project_id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete Project",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{runner_base_url}}/v1/runner/{{project_id}}",
                  "host": [
                    "{{runner_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "runner",
                    "{{project_id}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Others",
          "item": [
            {
              "name": "Get Metrics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{runner_base_url}}/v1/runner/metrics",
                  "host": [
                    "{{runner_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "runner",
                    "metrics"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Cluster Type",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{runner_base_url}}/v1/runner/cluster-type",
                  "host": [
                    "{{runner_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "runner",
                    "cluster-type"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Logs",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{runner_base_url}}/v1/runner/{{project_id}}/services/logs?taskId&replicaId&since&since-time&tail&follow",
                  "host": [
                    "{{runner_base_url}}"
                  ],
                  "path": [
                    "v1",
                    "runner",
                    "{{project_id}}",
                    "services",
                    "logs"
                  ],
                  "query": [
                    {
                      "key": "taskId",
                      "value": null
                    },
                    {
                      "key": "replicaId",
                      "value": null
                    },
                    {
                      "key": "since",
                      "value": null,
                      "description": "RFC339 Timestamp"
                    },
                    {
                      "key": "since-time",
                      "value": null,
                      "description": "e.g 1h, 1m"
                    },
                    {
                      "key": "tail",
                      "value": null,
                      "description": "Interger representing show last n lines, where n is the integer"
                    },
                    {
                      "key": "follow",
                      "value": null,
                      "description": "True or False"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "eyJhbGciOiJIUzI1NiIsImtpZCI6InNjLWFkbWluLWtpZCIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDg2MjIzNjQsImlkIjoiYWRtaW4iLCJyb2xlIjoiYWRtaW4ifQ.IdPVyacG1pPR7UQd4EjnH7s2Mzif5rQCDjH8NjF40RU",
            "type": "string"
          }
        ]
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "5389d20d-177d-4055-8a36-7c077e8b62c7",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "e1843b56-2dfa-4c0f-8c9f-92233eb5affa",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ],
      "protocolProfileBehavior": {}
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "1c83a100-fa33-4d54-af76-6ad9c1667e91",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "07846731-4c6e-4fbe-a12d-9dd33eb79a9a",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "03da5b38-e050-44cc-b00a-cef12e3a7811",
      "key": "gateway_base_url",
      "value": "http://localhost:4122"
    },
    {
      "id": "03da5b38-e050-44cc-b00a-cef12e3a7812",
      "key": "deployed_service_idl",
      "value": "greeter"
    },
    {
      "id": "516b2fa5-2288-44e8-9ebc-ba17c698da89",
      "key": "project_id",
      "value": "myproject"
    },
    {
      "id": "3e9e4570-4961-474b-b145-889a8120e6e3",
      "key": "db_alias",
      "value": "db"
    },
    {
      "id": "ee621a00-cad8-420f-be7e-a85e847c6f0b",
      "key": "table_name",
      "value": "users"
    },
    {
      "id": "886333b2-0eb2-42a8-bc2c-74309a33c803",
      "key": "remote_service_id",
      "value": "billing"
    },
    {
      "id": "79321ced-b46c-41f2-b5bf-7d8db100b4f5",
      "key": "user_management_provider_id",
      "value": "email"
    },
    {
      "id": "0dd200ca-f0f2-45a3-9e97-e4dc819d7b8b",
      "key": "runner_base_url",
      "value": "http://localhost:4050"
    },
    {
      "id": "21a8c826-9027-434e-a96c-1921277226d2",
      "key": "deployed_service_id",
      "value": "greeter"
    },
    {
      "id": "a7f1bae1-258c-4a83-9656-bea1105c1142",
      "key": "deployed_service_version",
      "value": "v1"
    },
    {
      "id": "03816ba2-d284-4199-b0ea-82cb981e1358",
      "key": "deployed_service_role_id",
      "value": "role1"
    },
    {
      "id": "433ba244-72c7-4f34-89ec-35498cfc6766",
      "key": "deployed_secret_id",
      "value": "secretid1"
    },
    {
      "id": "f4b68c1d-29ae-4939-b06e-5d9d53757141",
      "key": "prepared_query_id",
      "value": "prepare1"
    },
    {
      "id": "c7407b71-f660-4cfe-a3ed-9e716d9ec707",
      "key": "remote_service_endpoint_name",
      "value": "getUsers"
    },
    {
      "id": "93d1bb8e-4590-4a80-960e-ce18d727ed60",
      "key": "integration_id",
      "value": "team-mangement"
    },
    {
      "id": "e4b43ea9-ced1-43cf-af74-0e251f24a86d",
      "key": "integration_hook_id",
      "value": "hookid"
    }
  ],
  "protocolProfileBehavior": {}
}