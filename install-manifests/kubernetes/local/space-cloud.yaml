
#############################################################################################
################################ Set some global parameters  ################################
#############################################################################################
apiVersion: "authentication.istio.io/v1alpha1"
kind: "MeshPolicy"
metadata:
  name: "default"
spec:
  peers:
    - mtls: {}
---
apiVersion: v1
kind: Namespace
metadata:
  name: space-cloud
  labels:
    istio-injection: enabled
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: deny-all
  namespace: default
spec:
  {}
---
#############################################################################################
############################### Create cluster role bindings  ###############################
#############################################################################################
apiVersion: v1
kind: ServiceAccount
metadata:
  name: space-cloud-runner
  namespace: space-cloud
---
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: space-cloud-runner
subjects:
  - kind: ServiceAccount
    name: space-cloud-runner # Name is case sensitive
    namespace: space-cloud
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: space-cloud-gateway
  namespace: space-cloud
---
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: space-cloud-gateway
subjects:
  - kind: ServiceAccount
    name: space-cloud-gateway # Name is case sensitive
    namespace: space-cloud
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
#############################################################################################
########################## Configure the istio side of the runner  ##########################
#############################################################################################
apiVersion: "security.istio.io/v1beta1"
kind: "AuthorizationPolicy"
metadata:
  name: "auth-runner"
  namespace: space-cloud
spec:
  selector:
    matchLabels:
      app: runner
  rules:
    - {}
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: "space-cloud-runner"
  namespace: space-cloud
spec:
  host: "runner.space-cloud.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: space-cloud-runner
  namespace: space-cloud
spec:
  hosts:
    - "runner.space-cloud.svc.cluster.local"
  http:
    - route:
        - destination:
            host: runner.space-cloud.svc.cluster.local
            port:
              number: 4050
      retries:
        attempts: 3
        perTryTimeout: 60s
    - match:
        - port: 4052
      route:
        - destination:
            host: runner.space-cloud.svc.cluster.local
            port:
              number: 4052
      retries:
        attempts: 1
        perTryTimeout: 3m
---
#############################################################################################
################### Create the service and deployment objects for runner  ###################
#############################################################################################
apiVersion: v1
kind: Service
metadata:
  name: runner
  namespace: space-cloud
  labels:
    app: runner
    service: runner
spec:
  ports:
    - port: 4050
      name: http
    - port: 4055
      name: http-proxy
  selector:
    app: runner
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner
  namespace: space-cloud
  labels:
    app: runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: runner
  template:
    metadata:
      labels:
        app: runner
    spec:
      serviceAccountName: space-cloud-runner
      containers:
        - name: runner
          command: ["./app", "start"]
          image: spaceuptech/runner
          imagePullPolicy: Always # IfNotPresent | Always
          env:
            - name: "LOG_LEVEL"
              value: "debug"
            - name: "ARTIFACT_ADDR"
              value: "store.space-cloud.svc.cluster.local:4122"
            - name: "JWT_SECRET"
              value: "some-secret"
            - name: "JWT_PROXY_SECRET"
              value: "some-proxy-secret"
          ports:
            - containerPort: 4050
            - containerPort: 4055
---
#############################################################################################
########################## Configure the istio side of the gateway  #########################
#############################################################################################
apiVersion: "security.istio.io/v1beta1"
kind: "AuthorizationPolicy"
metadata:
  name: "auth-gateway"
  namespace: space-cloud
spec:
  selector:
    matchLabels:
      app: gateway
  rules:
    - {}
---
apiVersion: "authentication.istio.io/v1alpha1"
kind: "Policy"
metadata:
  name: "gateway-policy"
  namespace: space-cloud
spec:
  targets:
  - name: gateway
  peers:
  - mtls:
      mode: PERMISSIVE
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: "space-cloud-gateway"
  namespace: space-cloud
spec:
  host: "gateway.space-cloud.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: space-cloud-gateway
  namespace: space-cloud
spec:
  hosts:
    - "gateway.space-cloud.svc.cluster.local"
  http:
    - match:
        - port: 4122
      route:
        - destination:
            host: "gateway.space-cloud.svc.cluster.local"
            port:
              number: 4122
      retries:
        attempts: 3
        perTryTimeout: 60s
    - match:
        - port: 4126
      route:
        - destination:
            host: "gateway.space-cloud.svc.cluster.local"
            port:
              number: 4126
      retries:
        attempts: 3
        perTryTimeout: 60s
---
#############################################################################################
################## Create the service and deployment objects for the gateway  ###############
#############################################################################################
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: space-cloud
  labels:
    app: gateway
    service: gateway
spec:
  type: NodePort
  ports:
    - nodePort: 30122
      targetPort: 4122
      port: 4122
      name: http
    - nodePort: 30126
      targetPort: 4126
      port: 4126
      name: https
  selector:
    app: gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: space-cloud
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
        clusterId: first-cluster
    spec:
      serviceAccountName: space-cloud-gateway
      containers:
        - name: gateway
          command: ["./app", "run"]
          image: spaceuptech/gateway
          imagePullPolicy: Always # IfNotPresent | Always
          env:
            - name: "RUNNER_ADDR"
              value: "runner.space-cloud.svc.cluster.local:4050"
            - name: "ADMIN_USER"
              value: "admin"
            - name: "ADMIN_PASS"
              value: "1234"
            - name: "ADMIN_SECRET"
              value: "some-secret"
            - name: "LOG_LEVEL"
              value: "debug"
            - name: "STORE_TYPE"
              value: "kube"
            - name: "LETSENCRYPT_STORE"
              value: "kube"
            - name: "DEV"
              value: "false" # Turn this to true for development mode
            - name: "SSL_ENABLE"
              value: "true"
            - name: "CLUSTER_ID"
              value: "first-cluster"
          ports:
            - containerPort: 4122
            - containerPort: 4126
