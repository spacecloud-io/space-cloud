#############################################################################################
############################### Service Account and Roles  ##################################
#############################################################################################
apiVersion: v1
kind: ServiceAccount
metadata:
  name: space-cloud-runner
  namespace: space-cloud
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: space-cloud-runner
  namespace: space-cloud
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods", "pods/log", "services", "configmaps", "secrets", "serviceaccounts"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups:
      - "extensions"
      - "apps"
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups:
      - "apps"
    resources: ["statefulsets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups:
      - "security.istio.io"
      - "networking.istio.io"
    resources: ["*"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups:
      - "keda.sh"
    resources: ["*"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups:
      - "rbac.authorization.k8s.io"
    resources: ["clusterroles", "roles", "clusterrolebindings", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: space-cloud-runner
  namespace: space-cloud
subjects:
  - kind: ServiceAccount
    name: space-cloud-runner # Name is case sensitive
    namespace: space-cloud
roleRef:
  kind: ClusterRole
  name: space-cloud-runner
  apiGroup: rbac.authorization.k8s.io
---
#############################################################################################
################################### Istio related config  ###################################
#############################################################################################
apiVersion: "security.istio.io/v1beta1"
kind: "PeerAuthentication"
metadata:
  name: "runner-auth"
  namespace: space-cloud
spec:
  selector:
    matchLabels:
      app: runner
  mtls:
    mode: STRICT
  portLevelMtls:
    4060:
      mode: PERMISSIVE
---
apiVersion: "security.istio.io/v1beta1"
kind: "AuthorizationPolicy"
metadata:
  name: "auth-runner"
  namespace: space-cloud
spec:
  selector:
    matchLabels:
      app: runner
  rules:
    - {}
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: "space-cloud-runner"
  namespace: space-cloud
spec:
  host: "runner.space-cloud.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: space-cloud-runner
  namespace: space-cloud
spec:
  hosts:
    - "runner.space-cloud.svc.cluster.local"
  http:
    - match:
        - port: 4050
      route:
        - destination:
            host: runner.space-cloud.svc.cluster.local
            port:
              number: 4050
      retries:
        attempts: 3
        perTryTimeout: 60s
    - match:
        - port: 4055
      route:
        - destination:
            host: runner.space-cloud.svc.cluster.local
            port:
              number: 4055
      retries:
        attempts: 1
        perTryTimeout: 30m
  tcp:
    - match:
        - port: 4060
      route:
        - destination:
            host: runner.space-cloud.svc.cluster.local
            port:
              number: 4060
---
#############################################################################################
##################################### Kubernetes config  ####################################
#############################################################################################
apiVersion: v1
kind: Service
metadata:
  name: runner
  namespace: space-cloud
  labels:
    app: runner
    service: runner
spec:
  ports:
    - port: 4050
      name: http
    - port: 4055
      name: http-proxy
    - port: 4060
      name: grpc-keda
  selector:
    app: runner
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner
  namespace: space-cloud
  labels:
    app: runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: runner
  template:
    metadata:
      labels:
        app: runner
    spec:
      serviceAccountName: space-cloud-runner
      containers:
        - name: runner
          command: ["./app", "start"]
          image: "{{ .Values.runner.image.name }}:{{ .Values.version }}"
          imagePullPolicy: {{ .Values.runner.image.pullPolicy }}
          env:
            - name: "LOG_LEVEL"
              value: {{ .Values.meta.logLevel }}
            - name: "LOG_FORMAT"
              value: {{ .Values.meta.logFormat }}
            - name: "PROMETHEUS_ADDR"
              value: {{ .Values.connections.prometheusConn }}
            - name: "JWT_SECRET"
              value: {{ .Values.admin.secret }}
            - name: "CLUSTER_ID"
              value: {{ .Values.clusterId }}
            - name: "REDIS_CONN"
              value: {{ .Values.connections.redisConn }}
          {{ range $key, $value := .Values.gateway.envs }}
            - name: {{ $key | quote }}
              value: {{ $value | quote}}
          {{ end -}}
          ports:
            - containerPort: 4050
            - containerPort: 4055
            - containerPort: 4060
          resources:
            requests:
              memory: {{ .Values.prometheus.resources.memory }}
              cpu: {{ .Values.prometheus.resources.cpu }}
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner
  namespace: space-cloud
  labels:
    app: runner
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner
  minReplicas: {{ .Values.gateway.autoScaler.minReplicas }}
  maxReplicas: {{ .Values.gateway.autoScaler.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.gateway.autoScaler.averageCPUUtilization }}