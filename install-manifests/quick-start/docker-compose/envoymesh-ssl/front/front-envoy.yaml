static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            virtual_hosts:
            - name: backend
              domains:
              - "sc01.example.com"
              routes:
              - match:
                  prefix: "/"
                redirect:
                  path_redirect: "/"
                  https_redirect: true
          http_filters:
          - name: envoy.router
            config: {}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: auto
          upgrade_configs: 
            upgrade_type: websocket
            enabled: true
          stat_prefix: ingress_http
          use_remote_address: true
          # xff_num_trusted_hops: 0
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "sc01.example.com"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: service1

              #- match:
              #    prefix: "/"
              #  route:
              #    cluster: service2

          http_filters:
          - name: envoy.router
            typed_config: {}
      tls_context:
        common_tls_context:
          tls_certificates:
            - certificate_chain:
                filename: "/etc/cert.pem"
              private_key:
                filename: "/etc/key.pem"

  clusters:
  - name: service1
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    # http2_protocol_options: {}
    load_assignment:
      cluster_name: service1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service1
                port_value: 80
                
  #- name: service2
  #  connect_timeout: 0.25s
  #  type: strict_dns
  #  lb_policy: round_robin
  #  http2_protocol_options: {}
  #  load_assignment:
  #    cluster_name: service2
  #    endpoints:
  #    - lb_endpoints:
  #      - endpoint:
  #          address:
  #            socket_address:
  #              address: service2
  #              port_value: 80

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
