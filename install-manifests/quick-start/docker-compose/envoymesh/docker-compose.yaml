version: "3.7"
services:

  front-envoy:
    build:
      context: .
      dockerfile: ./front/Dockerfile-frontenvoy
    volumes:
      - ./front/front-envoy.yaml:/etc/front-envoy.yaml
    networks:
      - envoymesh
    expose:
      - "80"
      - "8001"
    ports:
      - "8000:80"
      - "8001:8001"
  
  mongo:
    image: mongo
    restart: always
    networks:
      envoymesh:
        aliases:
          - mongo
    volumes:
      - db_data:/data/db
    expose:
      - "27017"
    ports:
      - "27017:27017"

      
  service1:
    build:
      context: .
      dockerfile: ./service/Dockerfile-service
    volumes:
      - ./service/service-envoy-sc.yaml:/etc/service-envoy-sc.yaml
    networks:
      envoymesh:
        aliases:
          - service1
    depends_on:
      - "mongo"
    links:
      - "mongo"
    restart: always
    environment:
      - SERVICE_NAME=1
    expose:
      - "80"

  #service2:
  #  build:
  #    context: .
  #    dockerfile: ./service2/Dockerfile-service
  #  volumes:
  #    - ./service2/service-envoy-sc.yaml:/etc/service-envoy-sc.yaml
  #  networks:
  #    envoymesh:
  #      aliases:
  #        - service2
  #  depends_on:
  #    - "mongo"
  #  links:
  #    - "mongo"
  #  restart: always
  #  environment:
  #    - SERVICE_NAME=2
  #  expose:
  #    - "80"

volumes:
  db_data:

networks:
  envoymesh: {}