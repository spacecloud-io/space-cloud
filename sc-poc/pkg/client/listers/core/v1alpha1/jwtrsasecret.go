/*
Copyright The Space Cloud Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/spacecloud-io/space-cloud/pkg/apis/core/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// JwtRSASecretLister helps list JwtRSASecrets.
// All objects returned here must be treated as read-only.
type JwtRSASecretLister interface {
	// List lists all JwtRSASecrets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JwtRSASecret, err error)
	// JwtRSASecrets returns an object that can list and get JwtRSASecrets.
	JwtRSASecrets(namespace string) JwtRSASecretNamespaceLister
	JwtRSASecretListerExpansion
}

// jwtRSASecretLister implements the JwtRSASecretLister interface.
type jwtRSASecretLister struct {
	indexer cache.Indexer
}

// NewJwtRSASecretLister returns a new JwtRSASecretLister.
func NewJwtRSASecretLister(indexer cache.Indexer) JwtRSASecretLister {
	return &jwtRSASecretLister{indexer: indexer}
}

// List lists all JwtRSASecrets in the indexer.
func (s *jwtRSASecretLister) List(selector labels.Selector) (ret []*v1alpha1.JwtRSASecret, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JwtRSASecret))
	})
	return ret, err
}

// JwtRSASecrets returns an object that can list and get JwtRSASecrets.
func (s *jwtRSASecretLister) JwtRSASecrets(namespace string) JwtRSASecretNamespaceLister {
	return jwtRSASecretNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// JwtRSASecretNamespaceLister helps list and get JwtRSASecrets.
// All objects returned here must be treated as read-only.
type JwtRSASecretNamespaceLister interface {
	// List lists all JwtRSASecrets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JwtRSASecret, err error)
	// Get retrieves the JwtRSASecret from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.JwtRSASecret, error)
	JwtRSASecretNamespaceListerExpansion
}

// jwtRSASecretNamespaceLister implements the JwtRSASecretNamespaceLister
// interface.
type jwtRSASecretNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all JwtRSASecrets in the indexer for a given namespace.
func (s jwtRSASecretNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.JwtRSASecret, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JwtRSASecret))
	})
	return ret, err
}

// Get retrieves the JwtRSASecret from the indexer for a given namespace and name.
func (s jwtRSASecretNamespaceLister) Get(name string) (*v1alpha1.JwtRSASecret, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("jwtrsasecret"), name)
	}
	return obj.(*v1alpha1.JwtRSASecret), nil
}
